language: cpp
compiler:
  - gcc

before_install:

  # Travis's default installs of gcc, boost, & cmake currently lag behind the minimums we need.
  # So we need to manually setup them up. 
  #
  #  - gcc 4.8 (current default on Travis is 4.7, which is no good for C++11 work)
  #  - boost 1.55
  #  - cmake 3.x
  
  # add external repos
  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test           # gcc
  - sudo add-apt-repository -y ppa:boost-latest/ppa                  # boost
  - sudo add-apt-repository -y ppa:george-edison55/precise-backports # cmake
  
  # remove existing cmake install
  - sudo apt-get remove -qq cmake cmake-data
  - sudo apt-get autoremove -qq
  
  # update apt 
  - sudo apt-get update -y -qq

  # install
  - sudo apt-get install -y -qq g++-4.8 boost1.55 cmake-data cmake 
  
  # make sure we're using new gcc tools
  - sudo update-alternatives --install /usr/bin/g++  g++  /usr/bin/g++-4.8  90
  - sudo update-alternatives --install /usr/bin/gcc  gcc  /usr/bin/gcc-4.8  90 
  - sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-4.8 90

  # prep zlib
  - sudo apt-get install -y -qq zlib1g-dev

  # prep htslib
  - "cd .. && git clone https://github.com/PacificBiosciences/htslib.git && cd htslib && make && sudo make install; cd $TRAVIS_BUILD_DIR"

  # prep GoogleTest 
  - sudo apt-get install -y -qq libgtest-dev
  
  # prep coveralls 
  - pip install --user cpp-coveralls pyopenssl ndg-httpsclient pyasn1

before_script:
  # run cmake
  - mkdir build 
  - cd build
  - cmake .. -DPacBioBAM_build_coverage=ON -DGTEST_SRC_DIR=/usr/src/gtest -DCMAKE_BUILD_TYPE=Debug
    
script:
  # build & test
  - make -j 3
  - make test
  
  # publish coverage report
  - coveralls --gcov /usr/bin/gcov-4.8 --gcov-options '\-lp' --exclude-pattern "/usr/.*" --exclude build/CMakeFiles --exclude tests/src --exclude src/pugixml -r $TRAVIS_BUILD_DIR -b $TRAVIS_BUILD_DIR/build > /dev/null

branches:
  only:
    - master
    
notifications:
  recipients:
    - dbarnett@pacb.com
  email:
    on_success: change
    on_failure: always 
   
